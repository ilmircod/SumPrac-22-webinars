version: '3.2'

services:
  web:
    build: src
    command: gunicorn share_service.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/mediafiles
    depends_on:
      - db
      - redis
    ports:
      - ${DJANGO_PORT}:8000
    environment: &env
      DEBUG: 0
      ENVIRONMENT: staging
      CELERY_BROKER: redis://redis:6379
      DATABASE: postgres
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      DB_HOST: db
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      FLOWER_PASSWORD: ${FLOWER_PASSWORD}
      FLOWER_PORT: ${FLOWER_PORT}
      FLOWER_USER: ${FLOWER_USER}
      SOCIAL_AUTH_GOOGLE_OAUTH2_KEY: ${SOCIAL_AUTH_GOOGLE_OAUTH2_KEY}
      SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET: ${SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET}
      SENTRY_DSN: ${SENTRY_DSN}

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}

  redis:
    restart: on-failure
    image: redis:6.0.10

  celery:
    restart: on-failure
    build: src
    command: celery -A share_service worker -B -l INFO
    depends_on:
      - redis
      - db
      - web
    environment:
      <<: *env

volumes:
  postgres_data:
  static_volume:
  media_volume:
