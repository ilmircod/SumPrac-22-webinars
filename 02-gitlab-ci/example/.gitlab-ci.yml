image: docker:19.03.12

services:
  - docker:19.03.12-dind

stages:
  - lint
  - sast
  - test
  - deploy

include:
  - template: Security/SAST.gitlab-ci.yml

static_lints:
  stage: lint
  image: 4heck/python-linters:latest
  script:
    - cd src && flake8 && black . --check

pytest_and_coverage:
  stage: test
  image: tiangolo/docker-with-compose
  before_script:
    - docker-compose -f docker-compose.test.yml -p share_service_test up -d --build
  script:
    - docker exec -i share_service_test_web_1 coverage run -m pytest --junitxml=report.xml
    - docker exec -i share_service_test_web_1 coverage report --rcfile=.coveragerc
    - docker cp share_service_test_web_1:/usr/src/app/report.xml .
  after_script:
    - docker-compose -f docker-compose.test.yml -p share_service_test down -v
  artifacts:
    when: always
    reports:
      junit: report.xml

.base_deploy_staging: &base_deploy_staging
  stage: deploy
  image: tiangolo/docker-with-compose
  script:
    - docker-compose -f docker-compose.staging.yml -p share_service_backend stop
    - docker-compose -f docker-compose.staging.yml -p share_service_backend rm -f
    - docker-compose -f docker-compose.staging.yml -p share_service_backend build --build-arg CI_COMMIT_SHA=${CI_COMMIT_SHA} --build-arg CI_COMMIT_REF_NAME=${CI_COMMIT_REF_NAME}
    - docker-compose -f docker-compose.staging.yml -p share_service_backend up -d --remove-orphans
  environment:
    name: Staging
    url: https://share_service.mircod.one/admin/
  tags:
    - praktikum

bandit-sast:
  stage: sast
  tags:
    - praktikum

semgrep-sast:
  stage: sast
  tags:
    - praktikum

deploy_staging_develop:
  <<: *base_deploy_staging
  only:
    - develop

deploy_staging:
  <<: *base_deploy_staging
  when: manual
  except:
    - master
    - develop
